{"name":"Overhead Tile Fade for All Tokens - Toggle Hidden Setting","type":"script","img":"icons/svg/dice-target.svg","scope":"global","command":"/* toggle fade for when hidden tokens are under the tile */\nconst tiles = canvas.foreground.controlled;\nif(tiles.length === 0) return ui.notifications.error(\"You must have a tile selected to activate this macro.\");\n\nfor(let tile of tiles) {\n   let setting = tile.data.flags['overhead-tile-fade-for-all-tokens']?.hidden;\n   \n   await canvas.scene.updateEmbeddedDocuments('Tile', [{_id: tile.data._id, 'flags.overhead-tile-fade-for-all-tokens.hidden': !setting}]);\n}","_id":"KNCY3hsFK96BSMJ9"}
{"name":"Overhead Tile Fade for All Tokens - Select Mode Setting","type":"script","author":"iAiFKpPKazLCOcq9","img":"icons/svg/dice-target.svg","scope":"global","command":"/* change all of overhead tile fade for all tokens settings for all selected tiles */\nconst tiles = canvas.foreground.controlled;\nif(tiles.length === 0) return ui.notifications.error(\"You must have a tile selected to activate this macro.\");\n\nasync function tileUpdate(data) {\n    console.log(data);\n    for(let tile of tiles) {\n        await canvas.scene.updateEmbeddedDocuments('Tile', [{_id: tile.data._id, 'flags.overhead-tile-fade-for-all-tokens': data}]);\n    }\n}\n\nlet dialogEditor = new Dialog({\n    title: `Overhead Tile Fade For All Tokens - Update All Settings`,\n    content: `\n        <form>\n            <div class=\"form-group\">\n                <label>Mode:</label>\n                <select name=\"otffat-mode\">\n                    <option value=\"OFF\"}>Foundry Default</option>\n                    <option value=\"ALL\">All Tokens</option>\n                    <option value=\"BY_VISIBILITY\">By Token Visibility</option>\n                    <option value=\"BY_DISPOSITION\">By Token Disposition</option>\n                </select>\n            </div>\n        </form>\n    `,\n    buttons: {\n        close: {\n            icon: \"<i class='fas fa-tick'></i>\",\n            label: `Close`\n        },\n        submit: {\n            label: 'Save',\n            callback: html => {\n                let form = html.find('form');\n                let mode = form.find('select[name=\"otffat-mode\"').val();\n\n                let data = { mode };\n                tileUpdate(data);\n            }\n        }\n    },\n    default: \"close\",\n    close: html => console.log(html)\n});\n\ndialogEditor.render(true);","_id":"cJ19DTt3rqZdZHVR"}
{"name":"Overhead Tile Fade for All Tokens - Toggle Hostile Setting","type":"script","img":"icons/svg/dice-target.svg","scope":"global","command":"/* toggle fade for when hostiles are under the tile */\nconst tiles = canvas.foreground.controlled;\nif(tiles.length === 0) return ui.notifications.error(\"You must have a tile selected to activate this macro.\");\n\nfor(let tile of tiles) {\n   let setting = tile.data.flags['overhead-tile-fade-for-all-tokens']?.hostile;\n   \n   await canvas.scene.updateEmbeddedDocuments('Tile', [{_id: tile.data._id, 'flags.overhead-tile-fade-for-all-tokens.hostile': !setting}]);\n}","_id":"lVvQWNA3aWG7q9TV"}
{"name":"Overhead Tile Fade for All Tokens - Toggle Neutral Setting","type":"script","img":"icons/svg/dice-target.svg","scope":"global","command":"/* toggle fade for when neutrals are under the tile */\nconst tiles = canvas.foreground.controlled;\nif(tiles.length === 0) return ui.notifications.error(\"You must have a tile selected to activate this macro.\");\n\nfor(let tile of tiles) {\n   let setting = tile.data.flags['overhead-tile-fade-for-all-tokens']?.neutral;\n   \n   await canvas.scene.updateEmbeddedDocuments('Tile', [{_id: tile.data._id, 'flags.overhead-tile-fade-for-all-tokens.neutral': !setting}]);\n}","_id":"o0nbh960Ya89eNsm"}
{"name":"Overhead Tile Fade For All Tokens - Update All Settings","type":"script","author":"iAiFKpPKazLCOcq9","img":"icons/svg/dice-target.svg","scope":"global","command":"/* change all of overhead tile fade for all tokens settings for all selected tiles */\nconst tiles = canvas.foreground.controlled;\nif(tiles.length === 0) return ui.notifications.error(\"You must have a tile selected to activate this macro.\");\n\nasync function tileUpdate(data) {\n    console.log(data);\n    for(let tile of tiles) {\n        await canvas.scene.updateEmbeddedDocuments('Tile', [{_id: tile.data._id, 'flags.overhead-tile-fade-for-all-tokens': data}]);\n    }\n}\n\nlet dialogEditor = new Dialog({\n    title: `Overhead Tile Fade For All Tokens - Update All Settings`,\n    content: `\n        <form>\n            <div class=\"form-group\">\n                <label>Mode:</label>\n                <select name=\"otffat-mode\">\n                    <option value=\"OFF\"}>Foundry Default</option>\n                    <option value=\"ALL\">All Tokens</option>\n                    <option value=\"BY_VISIBILITY\">By Token Visibility</option>\n                    <option value=\"BY_DISPOSITION\">By Token Disposition</option>\n                </select>\n            </div>\n            <div id=\"otffat_mode_settings_BY_DISPOSITION\" style=\"margin-top: 15px;\">\n                <p class=\"notes\">Settings for when the mode is By Token Disposition</p>\n                <div class=\"form-group fade-settings\" id=\"fade-for-type\">\n                    <label>Dispositions:</label>\n                    Friendly: <input type=\"checkbox\" name=\"otffat-friendly\" data-dtype=\"Boolean\"/>\n                    Neutral: <input type=\"checkbox\" name=\"otffat-neutral\" data-dtype=\"Boolean\" />\n                    Hostile: <input type=\"checkbox\" name=\"otffat-hostile\" data-dtype=\"Boolean\" />\n                </div>\n                <div class=\"form-group fade-settings\" id=\"fade-for-hidden\">\n                    <label>Fade for hidden tokens?</label>\n                    <input type=\"checkbox\" name=\"otffat-hidden\" data-dtype=\"Boolean\" />\n                </div>\n            </div>\n        </form>\n    `,\n    buttons: {\n        close: {\n            icon: \"<i class='fas fa-tick'></i>\",\n            label: `Close`\n        },\n        submit: {\n            label: 'Save',\n            callback: html => {\n                let form = html.find('form');\n                let mode = form.find('select[name=\"otffat-mode\"').val();\n                let friendly = form.find('input[name=\"otffat-friendly\"').is(':checked');\n                let neutral = form.find('input[name=\"otffat-neutral\"').is(':checked');\n                let hostile = form.find('input[name=\"otffat-hostile\"').is(':checked');\n                let hidden = form.find('input[name=\"otffat-hidden\"').is(':checked');\n\n                let data = { mode, friendly, neutral, hostile, hidden };\n                tileUpdate(data);\n            }\n        }\n    },\n    default: \"close\",\n    close: html => console.log(html)\n});\n\ndialogEditor.render(true);","_id":"sGKPWWx4ATUCu1nO"}
{"name":"Overhead Tile Fade for All Tokens - Toggle Friendly Setting","type":"script","img":"icons/svg/dice-target.svg","scope":"global","command":"/* toggle fade for when friendlies are under the tile */\nconst tiles = canvas.foreground.controlled;\nif(tiles.length === 0) return ui.notifications.error(\"You must have a tile selected to activate this macro.\");\n\nfor(let tile of tiles) {\n   let setting = tile.data.flags['overhead-tile-fade-for-all-tokens']?.friendly;\n   \n   await canvas.scene.updateEmbeddedDocuments('Tile', [{_id: tile.data._id, 'flags.overhead-tile-fade-for-all-tokens.friendly': !setting}]);\n}","_id":"z0hzKu5Kshm12KhI"}
